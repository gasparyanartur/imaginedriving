ARG OS_VERSION=20.04
ARG CUDA_VERSION=11.8.0
ARG CU_VERSION=118
ARG USER_ID=1000
ARG PYTHON_VERSION=3.11


# Define base image.
FROM nvidia/cuda:${CUDA_VERSION}-devel-ubuntu${OS_VERSION}

ARG OS_VERSION
ARG CUDA_VERSION
ARG CU_VERSION
ARG USER_ID
ARG PYTHON_VERSION

# Set environment variables.
## Set non-interactive to prevent asking for user inputs blocking image creation.
ENV DEBIAN_FRONTEND=noninteractive
## Set timezone as it is required by some packages.
ENV TZ=Europe/Berlin
## CUDA Home, required to find CUDA in some packages.
ENV CUDA_HOME="/usr/local/cuda"

# Install required apt packages and clear cache afterwards.
RUN apt-get update \
    && apt-get install -y software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get install -y --no-install-recommends \
    python${PYTHON_VERSION} \
    python${PYTHON_VERSION}-dev \
    python${PYTHON_VERSION}-distutils \
    build-essential \
    cmake \
    curl \
    ffmpeg \
    git \
    qtbase5-dev \
    sudo \
    vim-tiny \
    wget \
    && curl -sS https://bootstrap.pypa.io/get-pip.py | python${PYTHON_VERSION} \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove
    

# Create non root user and setup environment.
RUN useradd -m -d /home/user -g root -G sudo -u ${USER_ID} user
RUN usermod -aG sudo user
# Set user password
RUN echo "user:user" | chpasswd
# Ensure sudo group users are not asked for a password when using sudo command by ammending sudoers file
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Switch to new uer and workdir.
USER ${USER_ID}
WORKDIR /home/user

# Add local user binary folder to PATH variable.
ENV PATH="${PATH}:/home/user/.local/bin"
SHELL ["/bin/bash", "-c"]

ARG TORCH_VERSION=2.2.0
ARG TORCHVISION_VERSION=0.17.0 

# Install pytorch and submodules
COPY requirements.txt .
RUN python${PYTHON_VERSION} -m pip install --upgrade \
        pip \
        setuptools \
        pathtools \
        promise \
        pybind11 \
    && python${PYTHON_VERSION} -m pip install \
        torch==${TORCH_VERSION}+cu${CU_VERSION} \
        torchvision==${TORCHVISION_VERSION}+cu${CU_VERSION} \
        --extra-index-url https://download.pytorch.org/whl/cu${CU_VERSION} \
    && python${PYTHON_VERSION} -m pip install -r requirements.txt

# Bash as default entrypoint.
CMD /bin/bash -l

SHELL ["/bin/bash", "-c"]
WORKDIR /workspace
